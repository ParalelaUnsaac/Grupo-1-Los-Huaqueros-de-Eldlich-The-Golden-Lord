// AppReinas.cpp : Este archivo contiene la función "main". La ejecución del programa comienza y termina ahí.
//

/* Programa C / C ++ para resolver el problema de N Queen usando
retroceso */
#define N 4 
#include <stdbool.h> 
#include <stdio.h> 

//  Utilizamos este modulo para mostrar nuestra solucion
void MostrarSolucion(int MatrizReinas[N][N])
{
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            printf(" %d ", MatrizReinas[i][j]);
        printf("\n");
    }
}

/* Una función de utilidad para comprobar si una reina puede
ser colocado a bordo[fila][col].Tenga en cuenta que esto
se llama a la función cuando las reinas "col" son
ya colocado en columnas de 0 a col - 1.
Por lo tanto, solo debemos verificar el lado izquierdo
atacar a las reinas */
bool EsSeguro(int MatrizReinas[N][N], int row, int col)
{
    int i, j;

    /* Checamos la fila y podria salir 0=false or 1=true */
    for (i = 0; i < col; i++)
        if (MatrizReinas[row][i])
            return false;

    /* Checamos la Columna y podria salir 0=false or 1=true */
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (MatrizReinas[i][j])
            return false;

    /* Verificamos las diagonales */
    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (MatrizReinas[i][j])
            return false;

    return true;
}

/* Una función de utilidad recursiva para resolver N
Problema de la reina */
bool ResolverNReinas(int MatrizReinas[N][N], int col)
{
    /* caso base : si se colocan todas las reinas
        luego devuelve verdadero */
    if (col >= N)
        return true;

    /* Considere esta columna e intente colocar
        esta reina en todas las filas una a una */
    for (int i = 0; i < N; i++) {
        /* Comprueba si la reina se puede colocar en
            MatrizReinas[i][col] */
        if (EsSeguro(MatrizReinas, i, col)) {
            /* Coloca esta reina en MatrizReinas[i][col] */
            MatrizReinas[i][col] = 1;

            /* recurrir para colocar el resto de las reinas */
            if (ResolverNReinas(MatrizReinas, col + 1))
                return true;

            /* Si coloca a la reina en el tablero[i][col]
                no conduce a una solución, entonces
                eliminar a la reina del tablero[i][col] */
            MatrizReinas[i][col] = 0; // BACKTRACK 
        }
    }

    /* Si la reina no se puede colocar en ninguna fila en
        esta columna de columna luego devuelve falso */
    return false;
}

/* Esta función resuelve el problema de N Queen usando
Retroceder.Utiliza principalmente solveNQUtil() para
resolver el problema.Devuelve falso si reinas
no se puede colocar, de lo contrario, devuelve verdadero y
imprime la ubicación de las reinas en forma de 1.
Tenga en cuenta que puede haber más de una
soluciones, esta función imprime una de las
soluciones viables. */
bool ResolveEIniciNQ()
{
    int MatrizReinas[N][N] = { { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 } };

    if (ResolverNReinas(MatrizReinas, 0) == false) {
        printf("No existe solucion");
        return false;
    }

    MostrarSolucion(MatrizReinas);
    return true;
}

// programa principal
int main()
{
    ResolveEIniciNQ();
    return 0;
}
// Ejecutar programa: Ctrl + F5 o menú Depurar > Iniciar sin depurar
// Depurar programa: F5 o menú Depurar > Iniciar depuración

// Sugerencias para primeros pasos: 1. Use la ventana del Explorador de soluciones para agregar y administrar archivos
//   2. Use la ventana de Team Explorer para conectar con el control de código fuente
//   3. Use la ventana de salida para ver la salida de compilación y otros mensajes
//   4. Use la ventana Lista de errores para ver los errores
//   5. Vaya a Proyecto > Agregar nuevo elemento para crear nuevos archivos de código, o a Proyecto > Agregar elemento existente para agregar archivos de código existentes al proyecto
//   6. En el futuro, para volver a abrir este proyecto, vaya a Archivo > Abrir > Proyecto y seleccione el archivo .sln
